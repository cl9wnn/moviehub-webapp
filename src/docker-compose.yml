version: "3.9"

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:5173"
    depends_on:
      - backend

  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "5000:8080"
    depends_on:
      - seq
      - db
      - minio
      - redis
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - FrontendOptions__LocalUrl=http://localhost:5173
      - FrontendOptions__PublicUrl=http://localhost:3000
      - ConnectionStrings__PostgresDbConnection=Host=db;Port=5432;Database=${POSTGRES_DB};Username=${POSTGRES_USER};Password=${POSTGRES_PASSWORD}
      - MinioOptions__AccessKey=${MINIO_ROOT_USER}
      - MinioOptions__SecretKey=${MINIO_ROOT_PASSWORD}
      - MinioOptions__PublicEndpoint=minio:9000
      - MinioOptions__InternalEndpoint=localhost:9000
      - RedisOptions__Host=redis
      - RedisOptions__Port=6379
      - AdminOptions__SecretKey=${ADMIN_SECRET_KEY}
      - EmailOptions__SmtpServer=smtp.gmail.com
      - EmailOptions__SmtpPort=587
      - EmailOptions__UseSsl=true
      - EmailOptions__UserName=${GMAIL_APP_USERNAME}
      - EmailOptions__Password=${GMAIL_APP_PASSWORD}
      
  db:
    container_name: postgres
    image: postgres:15
    ports:
      - "5434:5432"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - pgdata:/var/lib/postgresql/data

  minio:
    image: minio/minio
    container_name: minio
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: always
    volumes:
      - redis_data:/data
    command: ["redis-server", "--appendonly", "yes"]

  seq:
    container_name: seq
    image: datalust/seq:latest
    ports:
      - "5341:80"
    environment:
      - ACCEPT_EULA=Y
    volumes:
      - seqdata:/data
      
volumes:
  pgdata:
  minio_data:
  seqdata:
  redis_data:

